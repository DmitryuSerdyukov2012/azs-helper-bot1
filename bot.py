import telebot
import json
import openai
import os
from dotenv import load_dotenv

load_dotenv()

bot = telebot.TeleBot(os.getenv("TELEGRAM_BOT_TOKEN"))
openai.api_key = os.getenv("OPENAI_API_KEY")

with open("knowledge_base.json", "r", encoding="utf-8") as f:
    kb = json.load(f)

def find_algorithm(query):
    for algo in kb.get("–∞–ª–≥–æ—Ä–∏—Ç–º—ã", []):
        if any(k.lower() in query.lower() for k in algo["–∫–ª—é—á–µ–≤—ã–µ_—Ç–µ–º—ã"]):
            return algo
    return None

def ask_gpt(prompt):
    client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
    response = client.chat.completions.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ê–ó–°. –û—Ç–≤–µ—á–∞–π –ø–æ —Å—É—â–µ—Å—Ç–≤—É, –∫—Ä–∞—Ç–∫–æ, —Å—Å—ã–ª–∞—è—Å—å –Ω–∞ –ì–û–°–¢—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏."},
            {"role": "user", "content": prompt}
        ]
    )
    return response.choices[0].message.content


@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(message.chat.id, "üîß –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ê–ó–°. –ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: '–ø—Ä–∏–µ–º –°–£–ì').")

@bot.message_handler(func=lambda message: True)
def handle_query(message):
    algo = find_algorithm(message.text)
    if algo:
        reply = f"üìò *{algo['–Ω–∞–∑–≤–∞–Ω–∏–µ']}*\n"
        for step in algo["—ç—Ç–∞–ø—ã"]:
            reply += f"üîπ *{step['—ç—Ç–∞–ø']}*: {step['–æ–ø–∏—Å–∞–Ω–∏–µ']}\n"
        bot.send_message(message.chat.id, reply, parse_mode="Markdown")
    else:
        answer = ask_gpt(message.text)
        bot.send_message(message.chat.id, answer)

bot.infinity_polling()
